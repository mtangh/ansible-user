---

- hosts: all
  become: yes
  gather_facts: yes

  tags:
  - ansible-manager

  vars:

    ansible_manager:
      name: ansible
      group: ansible
      groups: ansible
      uid: 555
      gid: 555
      home: /home/ansible
      shell: /bin/bash
   
  tasks:

  - name: ansible-manager | Create group
    group:
      name: "{{ ansible_manager.group }}"
      gid: "{{ ansible_manager.gid }}"
      state: present
    when: test_run is undefined
          and test_run == false
    tags:
    - create-manager

  - name: ansible-manager | Generate passwod for new user
    shell: mktemp -u XXXXXXXXXXXX
    register: new_passwd
    changed_when: false
    ignore_errors: true
    tags: create-manager

  - name: ansible-manager | Generate passwod salt for new user
    shell: mktemp -u XXXXXXXXXXXXXXXXXXXX
    register: passwd_salt
    changed_when: false
    ignore_errors: true
    tags:
    - create-manager

  - name: ansible-manager | Generate passwod sha512
    shell: |
      python -c '
      import crypt,getpass,pwd;
      print crypt.crypt(
      "{{ new_passwd.stdout }}",
      "\$6\${{ passwd_salt.stdout }}\$")
      '
    register: passwd_hash
    changed_when: false
    ignore_errors: true
    when: new_passwd.stdout is defined
          and passwd_salt.stdout is defined
    tags:
    - create-manager

  - debug: msg="password_hash = {{ passwd_hash.stdout if passwd_hash.stdout is defined else '???' }}"
    when: test_run is defined
          and test_run == true

  - name: ansible-manager | Create user 'ansible'
    user: 
      name: "{{ ansible_manager.name }}"
      uid: "{{ ansible_manager.uid }}"
      group: "{{ ansible_manager.group }}"
      groups: "{{ ansible_manager.groups }}"
      home: "{{ ansible_manager.home|d('/home/ansible') }}"
      shell: "{{ ansible_manager.shell|d('/bin/bash') }}" 
      createhome: "{{ ansible_manager.createhome|d('yes') }}"
      comment: "{{ ansible_manager.comment|d('Ansible Manager') }}"
      password: "{{ passwd_hash.stdout }}"
      state: present
    register: create_user_result
    when: ansible_manager is defined
          and passwd_hash.stdout is defined
          and ( test_run is undefined
             or test_run == false ) 
    tags:
    - create-manager

  - name: ansible-manager | Setup authorized_keys
    authorized_key:
      user: "{{ ansible_manager.name }}"
      key: "{{ lookup('file','ansible-id_rsa.pub') }}"
    when: create_user_result|success
          and create_user_result|skipped == false
          and ( test_run is undefined
             or test_run == false ) 

  - name: ansible-manager | Configure sudoers
    lineinfile: 
      dest: /etc/sudoers
      state: present
      backup: yes
      insertafter: "^(#|)[ ]*%wheel[ \t]+.*"
      line: "%{{ ansible_manager.group }}\tALL=(ALL)\tNOPASSWD: ALL"
    when: create_user_result|success
          and create_user_result|skipped == false
          and ( test_run is undefined
             or test_run == false ) 
    tags:
    - config-sudoers

